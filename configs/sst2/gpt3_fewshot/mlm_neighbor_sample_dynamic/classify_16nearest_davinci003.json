{
  "dataset_name": "sst2",
  "data_dir_path": "/data2/lixiaoya/gpt_data_models/data/sst2_original",
  "save_log_dir": "/data2/lixiaoya/outputs/gpt_text/sst2_original_v2/gpt3_fewshot/mlm_neighbor_sample_dynamic/classify_16nearest_davinci003_temp2",
  "gpt3_backbone": "friday",
  "gpt3_model_config": {
    "openai_api_key": [
      "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",
      "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",
      "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",
      "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",
      "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",
      "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"
    ],
    "batch_size": 18,
    "engine_name": "text-davinci-003",
    "max_retries": 12,
    "max_tokens": 200,
    "temperature": 0.7,
    "top_p": 1,
    "frequency_penalty": 0.0,
    "presence_penalty": 0.0,
    "best_of": 1,
    "friday_url": "http://47.251.43.109:31021",
    "max_sleep_time": 1200,
    "request_timeout": 10000,
    "rate_limit": 50,
    "rate_limit_delay": 70,
    "logprobs": 5,
    "sign": "super",
    "version": "v1.1"
  },
  "prompt_type": "few-shot-dynamic",
  "prompt_config": {
    "gradient_update": false,
    "instance_num": 16,
    "max_prompt_len": 3800,
    "instance_strategy": "finetuned-mlm-nearest-neighbor",
    "data_retriever_candidate_dir": "/data2/lixiaoya/gpt_data_models/data/sst2_original",
    "retriever_name_or_path": "/data2/lixiaoya/gpt_data_models/models/roberta-large",
    "retriever_ckpt_path": "/data2/lixiaoya/gpt_data_models/original_gpu8_epoch5_bs16_lr1e-5_weightdecay0.1_warmup0.06_maxlen200_dropout0.2_grad1/checkpoint/epoch=4-val_loss=0.0216-val_acc=0.9553.ckpt",
    "file_saved_retriever_results": "/data2/lixiaoya/gpt_data_models/nearest_neighbors/sst2_nearest_neighbors/test_finetuned_roberta-large_candtrain_thres0.0_top24_seed9998.jsonl",
    "model_backbone": "gpt-3",
    "prompt_strategy": "few-shot",
    "task_description": "This is an overall sentiment classifier. \nClassify the sentiment of the INPUT sentence as Positive or Negative.",
    "delimiter": "\n\n",
    "demonstration_ranking": "score_l2h",
    "demonstration_pattern": "Input: <TEXT>\nSENTIMENT: <VERBALIZER-LABEL>",
    "assemble_demonstration_strategy": "fill_pattern",
    "verbalizer": {
      "1": "Positive",
      "0": "Negative"
    },
    "feasible_verbalizer": {
      "1": [
        "positive"
      ],
      "0": [
        "negative"
      ]
    },
    "verbalizer_position_idx": -1,
    "non_verbalizer": [
      "retry",
      "retry-various"
    ]
  }
}